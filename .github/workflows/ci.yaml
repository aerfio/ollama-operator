name: CI
"on":
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main
      - release-*

env:
  # renovate: datasource=github-releases depName=golangci/golangci-lint
  GOLANGCI_LINT_VERSION: v1.61.0
  # renovate: datasource=github-releases depName=kubernetes-sigs/kind
  KIND_VERSION: v0.24.0

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
      - run:
          go mod tidy -diff
      - run: |
          make test
      - run: |
          git diff --exit-code
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
      - run: |
          make build
      - run: |
          git diff --exit-code
  lint:
    runs-on: ubuntu-24.04
    # https://github.com/golangci/golangci-lint-action?tab=readme-ov-file#annotations
    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: allow read access to pull request. Use with `only-new-issues` option.
      pull-requests: read
      # Optional: allow write access to checks to allow the action to annotate code in the PR.
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
          cache: false # golangci-lint caches go modules
      - name: golangci-lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
  check-vulnerabilities:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4
        with:
          go-version-file: go.mod
  build-container-image:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
      - uses: ko-build/setup-ko@3aebd0597dc1e9d1a26bcfdb7cbeb19c131d3037 # v0.7
        with:
          version: v0.16.0
      - run: |
          ko build ./cmd/operator --sbom none --bare --tags "sha-$(git rev-parse --short=7 HEAD)"
  build-helm-chart:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Helm binary
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
      - name: Login to ghcr with Helm
        run: |
          helm registry login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Push helm chart
        run: |
          version="0.0.0-$(git describe --always --dirty --tags)"
          helm package ./helm/chart/ollama-operator --app-version "sha-$(git rev-parse --short=7 HEAD)" --version "$version" -d out
          helm push "./out/ollama-operator-${version}.tgz" oci://ghcr.io/${{ github.repository_owner }}/helm-charts
  e2e:
    needs:
      - build-container-image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
      - name: Install chainsaw
        uses: kyverno/action-install-chainsaw@d311eacde764f806c9658574ff64c9c3b21f8397 # v0.2.11
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1
        with:
          version: ${{ env.KIND_VERSION }}
          config: ./e2e/config/kind-config.yaml
          # bump this manually when the kind version changes!
          node_image: kindest/node:v1.31.0@sha256:53df588e04085fd41ae12de0c3fe4c72f7013bba32a20e7325357a1ac94ba865
          wait: 3m
          cluster_name: e2e-tests
      - name: Install ollama-operator in kind cluster
        run: |
          ./e2e/scripts/install.sh "sha-$(git rev-parse --short=7 HEAD)"
      - name: Run e2e tests
        run: |
          chainsaw test --config ./e2e/config/.chainsaw.yaml --test-dir ./e2e/scenarios
      - name: Export kind logs
        run: |
          rm -rf ./logs
          kind export logs ./logs --name e2e-tests
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
        with:
          name: logs
          path: ./logs
  lint-e2e-config:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
      - name: Lint chainsaw config and test files
        run: |
          make lint-chainsaw-tests
