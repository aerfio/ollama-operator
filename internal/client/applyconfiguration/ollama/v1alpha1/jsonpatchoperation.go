// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// JSONPatchOperationApplyConfiguration represents a declarative configuration of the JSONPatchOperation type for use
// with apply.
type JSONPatchOperationApplyConfiguration struct {
	Op    *string               `json:"op,omitempty"`
	Path  *string               `json:"path,omitempty"`
	From  *string               `json:"from,omitempty"`
	Value *runtime.RawExtension `json:"value,omitempty"`
}

// JSONPatchOperationApplyConfiguration constructs a declarative configuration of the JSONPatchOperation type for use with
// apply.
func JSONPatchOperation() *JSONPatchOperationApplyConfiguration {
	return &JSONPatchOperationApplyConfiguration{}
}

// WithOp sets the Op field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Op field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithOp(value string) *JSONPatchOperationApplyConfiguration {
	b.Op = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithPath(value string) *JSONPatchOperationApplyConfiguration {
	b.Path = &value
	return b
}

// WithFrom sets the From field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the From field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithFrom(value string) *JSONPatchOperationApplyConfiguration {
	b.From = &value
	return b
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *JSONPatchOperationApplyConfiguration) WithValue(value runtime.RawExtension) *JSONPatchOperationApplyConfiguration {
	b.Value = &value
	return b
}
