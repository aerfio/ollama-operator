// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ModelSpecApplyConfiguration represents a declarative configuration of the ModelSpec type for use
// with apply.
type ModelSpecApplyConfiguration struct {
	OllamaImage              *string                    `json:"ollamaImage,omitempty"`
	RecreateOnImmutableError *bool                      `json:"recreateOnImmutableError,omitempty"`
	Model                    *string                    `json:"model,omitempty"`
	StatefulSetPatches       *PatchesApplyConfiguration `json:"statefulSetPatches,omitempty"`
	ServicePatches           *PatchesApplyConfiguration `json:"servicePatches,omitempty"`
}

// ModelSpecApplyConfiguration constructs a declarative configuration of the ModelSpec type for use with
// apply.
func ModelSpec() *ModelSpecApplyConfiguration {
	return &ModelSpecApplyConfiguration{}
}

// WithOllamaImage sets the OllamaImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OllamaImage field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithOllamaImage(value string) *ModelSpecApplyConfiguration {
	b.OllamaImage = &value
	return b
}

// WithRecreateOnImmutableError sets the RecreateOnImmutableError field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RecreateOnImmutableError field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithRecreateOnImmutableError(value bool) *ModelSpecApplyConfiguration {
	b.RecreateOnImmutableError = &value
	return b
}

// WithModel sets the Model field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Model field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithModel(value string) *ModelSpecApplyConfiguration {
	b.Model = &value
	return b
}

// WithStatefulSetPatches sets the StatefulSetPatches field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StatefulSetPatches field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithStatefulSetPatches(value *PatchesApplyConfiguration) *ModelSpecApplyConfiguration {
	b.StatefulSetPatches = value
	return b
}

// WithServicePatches sets the ServicePatches field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServicePatches field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithServicePatches(value *PatchesApplyConfiguration) *ModelSpecApplyConfiguration {
	b.ServicePatches = value
	return b
}
