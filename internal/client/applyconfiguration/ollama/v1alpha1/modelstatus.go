// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

// ModelStatusApplyConfiguration represents a declarative configuration of the ModelStatus type for use
// with apply.
type ModelStatusApplyConfiguration struct {
	ConditionedStatusApplyConfiguration `json:",inline"`
	ObservedGeneration                  *int64                                `json:"observedGeneration,omitempty"`
	OllamaImage                         *string                               `json:"ollamaImage,omitempty"`
	OllamaModelDetails                  *OllamaModelDetailsApplyConfiguration `json:"modelDetails,omitempty"`
}

// ModelStatusApplyConfiguration constructs a declarative configuration of the ModelStatus type for use with
// apply.
func ModelStatus() *ModelStatusApplyConfiguration {
	return &ModelStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ModelStatusApplyConfiguration) WithConditions(values ...v1.Condition) *ModelStatusApplyConfiguration {
	for i := range values {
		b.ConditionedStatusApplyConfiguration.Conditions = append(b.ConditionedStatusApplyConfiguration.Conditions, values[i])
	}
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *ModelStatusApplyConfiguration) WithObservedGeneration(value int64) *ModelStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithOllamaImage sets the OllamaImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OllamaImage field is set to the value of the last call.
func (b *ModelStatusApplyConfiguration) WithOllamaImage(value string) *ModelStatusApplyConfiguration {
	b.OllamaImage = &value
	return b
}

// WithOllamaModelDetails sets the OllamaModelDetails field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OllamaModelDetails field is set to the value of the last call.
func (b *ModelStatusApplyConfiguration) WithOllamaModelDetails(value *OllamaModelDetailsApplyConfiguration) *ModelStatusApplyConfiguration {
	b.OllamaModelDetails = value
	return b
}
