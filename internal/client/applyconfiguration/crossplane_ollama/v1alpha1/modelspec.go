// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

// ModelSpecApplyConfiguration represents a declarative configuration of the ModelSpec type for use
// with apply.
type ModelSpecApplyConfiguration struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     *ForProviderApplyConfiguration `json:"forProvider,omitempty"`
}

// ModelSpecApplyConfiguration constructs a declarative configuration of the ModelSpec type for use with
// apply.
func ModelSpec() *ModelSpecApplyConfiguration {
	return &ModelSpecApplyConfiguration{}
}

// WithWriteConnectionSecretToReference sets the WriteConnectionSecretToReference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WriteConnectionSecretToReference field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithWriteConnectionSecretToReference(value v1.SecretReference) *ModelSpecApplyConfiguration {
	b.WriteConnectionSecretToReference = &value
	return b
}

// WithPublishConnectionDetailsTo sets the PublishConnectionDetailsTo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PublishConnectionDetailsTo field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithPublishConnectionDetailsTo(value v1.PublishConnectionDetailsTo) *ModelSpecApplyConfiguration {
	b.PublishConnectionDetailsTo = &value
	return b
}

// WithProviderConfigReference sets the ProviderConfigReference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProviderConfigReference field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithProviderConfigReference(value v1.Reference) *ModelSpecApplyConfiguration {
	b.ProviderConfigReference = &value
	return b
}

// WithManagementPolicies sets the ManagementPolicies field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ManagementPolicies field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithManagementPolicies(value v1.ManagementPolicies) *ModelSpecApplyConfiguration {
	b.ManagementPolicies = &value
	return b
}

// WithDeletionPolicy sets the DeletionPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DeletionPolicy field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithDeletionPolicy(value v1.DeletionPolicy) *ModelSpecApplyConfiguration {
	b.DeletionPolicy = &value
	return b
}

// WithForProvider sets the ForProvider field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ForProvider field is set to the value of the last call.
func (b *ModelSpecApplyConfiguration) WithForProvider(value *ForProviderApplyConfiguration) *ModelSpecApplyConfiguration {
	b.ForProvider = value
	return b
}
