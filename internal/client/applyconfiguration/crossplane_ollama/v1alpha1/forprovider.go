// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "aerf.io/ollama-operator/internal/client/applyconfiguration/ollama/v1alpha1"
)

// ForProviderApplyConfiguration represents a declarative configuration of the ForProvider type for use
// with apply.
type ForProviderApplyConfiguration struct {
	v1alpha1.ModelSpecApplyConfiguration `json:",inline"`
	Namespace                            *string `json:"namespace,omitempty"`
}

// ForProviderApplyConfiguration constructs a declarative configuration of the ForProvider type for use with
// apply.
func ForProvider() *ForProviderApplyConfiguration {
	return &ForProviderApplyConfiguration{}
}

// WithOllamaImage sets the OllamaImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OllamaImage field is set to the value of the last call.
func (b *ForProviderApplyConfiguration) WithOllamaImage(value string) *ForProviderApplyConfiguration {
	b.OllamaImage = &value
	return b
}

// WithModel sets the Model field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Model field is set to the value of the last call.
func (b *ForProviderApplyConfiguration) WithModel(value string) *ForProviderApplyConfiguration {
	b.Model = &value
	return b
}

// WithStatefulSetPatches sets the StatefulSetPatches field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StatefulSetPatches field is set to the value of the last call.
func (b *ForProviderApplyConfiguration) WithStatefulSetPatches(value *v1alpha1.PatchesApplyConfiguration) *ForProviderApplyConfiguration {
	b.StatefulSetPatches = value
	return b
}

// WithServicePatches sets the ServicePatches field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServicePatches field is set to the value of the last call.
func (b *ForProviderApplyConfiguration) WithServicePatches(value *v1alpha1.PatchesApplyConfiguration) *ForProviderApplyConfiguration {
	b.ServicePatches = value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ForProviderApplyConfiguration) WithNamespace(value string) *ForProviderApplyConfiguration {
	b.Namespace = &value
	return b
}
